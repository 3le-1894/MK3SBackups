# In newer versions of this board shipped in late 2021 the STM32F429
# is used, if this is the case compile for this with a "32KiB bootloader"
# You will need to check the chip on your board to identify which you have.
#
# The "make flash" command does not work on the SKR 2. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR 2
# with that SD card.

# See docs/Config_Reference.md for a description of parameters.

# Note: The initial revision of this board has a flaw that can cause
# damage to itself and other boards. Be sure to verify the board is
# not impacted by this flaw before using it.

[include 01_Duet_3/00_MCU.cfg]
[include 01_Duet_3/01_XYZ_Motor.cfg]
[include 01_Duet_3/02_Extruder.cfg]
[include 01_Duet_3/03_TMC2209.cfg]
[include 01_Duet_3/04_Fans.cfg]
[include 01_Duet_3/05_Probe.cfg]
[include 01_Duet_3/PinOut.cfg]

[include 02_Modules/ADXL.cfg]
[include 02_Modules/Auto_Speed.cfg]
[include 02_Modules/Auto_TMC.cfg]
[include 02_Modules/Bed_Leveling.cfg]
[include 02_Modules/Chamber.cfg]
[include 02_Modules/Firmware_Retraction.cfg]
[include 02_Modules/Input_Shaping.cfg]
[include 02_Modules/Klipper_Adaptive_Mesh.cfg]
[include 02_Modules/mainsail.cfg]
[include 02_Modules/Shell_Commands.cfg]
[include 02_Modules/Skew_Correcting.cfg]
[include 02_Modules/Start_End_Print.cfg]

[include 03_Macros/G_Code_Replacements.cfg]
[include 03_Macros/PID.cfg]
[include 03_Macros/Speed_Testing.cfg]

[include 04_Filament/*.cfg]


[printer]
kinematics: limited_cartesian
max_x_velocity: 1000
max_y_velocity: 1000
max_z_velocity: 12
max_velocity: 1414
#   In order to get maximum velocity gains on diagonals, this should be equal or
#   greater than the hypotenuse (sqrt(x*x + y*y)) of max_x_velocity and
#   max_y_velocity.
max_x_accel: 4000
max_y_accel: 4000
max_z_accel: 200
max_accel: 4000
scale_xy_accel: False
#   When true, scales the XY limits by the current tool head acceleration.
#   The factor is: slicer accel / hypot(max_x_accel, max_y_accel).
#   See below.

[extruder]
heater_pin: OUT1
sensor_type: PT1000
sensor_pin: vref_scaled:TEMP1
pullup_resistor: 2200
smooth_time: 1.0
#control: mpc
heater_power: 80
cooling_fan: fan
filament_diameter: 1.75
filament_density: 1.25 #PETG
filament_heat_capacity: 2.20 #PETG
min_extrude_temp: 170
min_temp: 0
max_temp: 500
per_move_pressure_advance: False
#   If true, uses pressure advance constant from trapq when processing moves
#   This causes changes to pressure advance be taken into account immediately,
#   for all moves in the current queue, rather than ~250ms later once the queue gets flushed

[heater_bed]
heater_pin: OUT0
sensor_type: EPCOS 100K B57560G104F
sensor_pin: vref_scaled:TEMP0
pullup_resistor: 2200
#control: pid_v
#pid_Kp: 22.2
#pid_Ki: 1.08
#pid_Kd: 114
min_temp: 0
max_temp: 125
pwm_cycle_time: 0.01666

[force_move]
enable_force_move: True

[exclude_object]
enable_exclude_object: True

[safe_z_home]
home_xy_position: 11, 6
move_to_previous: False

[idle_timeout]
#gcode:
#   A list of G-Code commands to execute on an idle timeout. See
#   docs/Command_Templates.md for G-Code format. The default is to run
#   "TURN_OFF_HEATERS" and "M84".
timeout: 43200
#   Idle time (in seconds) to wait before running the above G-Code
#   commands. The default is 600 seconds.

[probe]
#z_offset: 0.780

[gcode_arcs]
resolution: 0.25

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = mpc
#*# block_heat_capacity = 14.6192
#*# sensor_responsiveness = 0.0775031
#*# ambient_transfer = 0.0926860
#*# fan_ambient_transfer = 0.092686, 0.0969884, 0.0925246, 0.100711, 0.10623, 0.110493, 0.11233, 0.112322, 0.122851, 0.119956, 0.120627, 0.121071, 0.130562, 0.12827, 0.13105, 0.126501, 0.136646, 0.141948, 0.137901, 0.13217, 0.138529, 0.145016, 0.145661, 0.144353, 0.145743, 0.148137, 0.154349, 0.152583, 0.150298, 0.152135, 0.143678, 0.145971, 0.157451, 0.156893, 0.149346, 0.147175, 0.151688, 0.155831, 0.162986, 0.162669, 0.162725, 0.154208, 0.154565, 0.160369, 0.168304, 0.163672, 0.163096, 0.162928, 0.167838, 0.165718, 0.162053, 0.156844, 0.167625, 0.172355, 0.163179, 0.164508, 0.167633, 0.16085, 0.169416, 0.17156, 0.172588, 0.172164, 0.16768, 0.17481, 0.167313, 0.171347, 0.166012, 0.175464, 0.167751, 0.17517, 0.180292, 0.177596, 0.176267, 0.180886, 0.176628, 0.171661, 0.176177, 0.170832, 0.186259, 0.174307, 0.172537, 0.185332, 0.182455, 0.18107, 0.182836, 0.180197, 0.182056, 0.180987, 0.187825, 0.17488, 0.178553, 0.185789, 0.182418, 0.182908, 0.186858, 0.174586, 0.184148, 0.179609, 0.184249, 0.188554
#*#
#*# [heater_bed]
#*# pid_version = 1
#*# pid_target = 85.00
#*# pid_tolerance = 0.0200
#*# control = pid_v
#*# pid_kp = 49.362
#*# pid_ki = 0.651
#*# pid_kd = 936.034
#*#
#*# [probe]
#*# z_offset = 0.885
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.009914, 0.016581, -0.020086
#*# 	  0.056026, 0.024914, 0.004914
#*# 	  0.067414, 0.039914, 0.049081
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 0
#*# mesh_y_pps = 0
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 23.0
#*# max_x = 229.0
#*# min_y = 5.0
#*# max_y = 209.0
