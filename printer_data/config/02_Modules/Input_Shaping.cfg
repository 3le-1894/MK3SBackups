[mcu ABED]
serial: /dev/serial/by-id/usb-Klipper_rp2040_50443403107A611C-if00
restart_method: rpi_usb
is_non_critical: True

[mcu AHOTEND]
serial: /dev/serial/by-id/usb-Klipper_rp2040_5044340310A6261C-if00
restart_method: rpi_usb
is_non_critical: True

[adxl345 ahotend]
cs_pin: AHOTEND:gpio9
#   The SPI enable pin for the sensor. This parameter must be provided.
#spi_speed: 5000000
#   The SPI speed (in hz) to use when communicating with the chip.
#   The default is 5000000.
#spi_bus: spi1a
spi_software_sclk_pin: AHOTEND:gpio10
spi_software_mosi_pin: AHOTEND:gpio11
spi_software_miso_pin: AHOTEND:gpio8
axes_map: x, y, z

[adxl345 abed]
cs_pin: ABED:gpio9
spi_software_sclk_pin: ABED:gpio10
spi_software_mosi_pin: ABED:gpio11
spi_software_miso_pin: ABED:gpio8
axes_map: x, y, z

[resonance_tester]
probe_points: 125, 105, 105
accel_chip_x: adxl: ahotend
accel_chip_y: adxl: abed
#max_smoothing:
#   Maximum input shaper smoothing to allow for each axis during shaper
#   auto-calibration (with 'SHAPER_CALIBRATE' command). By default no
#   maximum smoothing is specified. Refer to Measuring_Resonances guide
#   for more details on using this feature.
#min_freq: 5
#   Minimum frequency to test for resonances. The default is 5 Hz.
#max_freq: 133.33
#   Maximum frequency to test for resonances. The default is 133.33 Hz.
#accel_per_hz: 75
#   This parameter is used to determine which acceleration to use to
#   test a specific frequency: accel = accel_per_hz * freq. Higher the
#   value, the higher is the energy of the oscillations. Can be set to
#   a lower than the default value if the resonances get too strong on
#   the printer. However, lower values make measurements of
#   high-frequency resonances less precise. The default value is 75
#   (mm/sec).
#hz_per_sec: 1
#   Determines the speed of the test. When testing all frequencies in
#   range [min_freq, max_freq], each second the frequency increases by
#   hz_per_sec. Small values make the test slow, and the large values
#   will decrease the precision of the test. The default value is 1.0
#   (Hz/sec == sec^-2).