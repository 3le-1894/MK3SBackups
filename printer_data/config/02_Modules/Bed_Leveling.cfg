[bed_mesh] #23, 5
speed: 200
horizontal_move_z: 5
mesh_min: 23, 5
mesh_max: 243, 201
probe_count: 3
fade_end: 10.0
mesh_pps: 3
algorithm: bicubic

#faulty_region_1_min: 100.583, 187.376
#faulty_region_1_max: 122.083, 229.376
#faulty_region_2_min: 125.672, -18.124
#faulty_region_2_max: 147.172, 23.876
#faulty_region_3_min: 192.261, 5.126
#faulty_region_3_max: 234.261, 26.626
#faulty_region_4_min: 114.422, 39.876
#faulty_region_4_max: 135.922, 81.876
#faulty_region_5_min: 21.422, 87.126
#faulty_region_5_max: 42.922, 129.126
#faulty_region_6_min: 54.172, 97.376
#faulty_region_6_max: 96.172, 118.876
#faulty_region_7_min: 154.172, 97.376
#faulty_region_7_max: 196.172, 118.876
#faulty_region_8_min: 205.136, 87.126
#faulty_region_8_max: 226.636, 129.126
#faulty_region_9_min: 114.422, 134.376
#faulty_region_9_max: 135.922, 176.376
#faulty_region_10_min: 176.177, 191.394
#faulty_region_10_max: 218.177, 212.894

adaptive_margin: 5

# Macro to calculate the probe min/max/current coordinates

##########################DEPENDENCIES##########################
# 
# This config section is required to output text to the console
# which is used by the macro. If you already have an equivalent
# config section elsewhere, you can comment this one out.
[respond]
# 
################################################################

[gcode_macro GET_PROBE_LIMITS]
description: Calculates the probe min/max/current coordinates
gcode: 
    {% set config = printer.configfile.settings %}
    # Find probe config in configfile
    {% if config["bltouch"] %}
        # bltouch section found
        {% set probe = config["bltouch"] %}
        {% set has_probe = True %}
    {% elif config["probe"] %}
        # probe section found
        {% set probe = config["probe"] %}
        {% set has_probe = True %}
    {% elif config["beacon"] %}
        # probe section found
        {% set probe = config["beacon"] %}
        {% set has_probe = True %}
    {% else %}
        # No probe or bltouch sections found
        RESPOND MSG="Failed to detect probe in configfile"
    {% endif %}
    {% if has_probe %}
        {% set stepperx = config["stepper_x"] %}
        {% set steppery = config["stepper_y"] %}
        {% set xprobemin = stepperx["position_min"]|float + probe["x_offset"]|float %} 
        {% set xprobemax = stepperx["position_max"]|float + probe["x_offset"]|float %} 
        {% set yprobemin = steppery["position_min"]|float + probe["y_offset"]|float %} 
        {% set yprobemax = steppery["position_max"]|float + probe["y_offset"]|float %}
        RESPOND MSG="Configured Probe X-Offset {probe.x_offset}"
        RESPOND MSG="Configured Probe Y-Offset {probe.y_offset}"
        {% if probe.z_offset is defined %}
            RESPOND MSG="Configured Probe Z-Offset {probe.z_offset}"
        {% elif probe.trigger_distance is defined %}
            RESPOND MSG="Configured Probe Trigger Distance {probe.trigger_distance}"
        {% endif %}
        RESPOND MSG="Minimum PROBE position X={xprobemin} Y={yprobemin}" 
        RESPOND MSG="Maximum PROBE position X={xprobemax} Y={yprobemax}"
        # check if printer homed
        {% if "xyz" in printer.toolhead.homed_axes %} 
            {% set curprobex = printer.toolhead.position.x|float + probe["x_offset"]|float %} 
            {% set curprobey = printer.toolhead.position.y|float + probe["y_offset"]|float %} 
            RESPOND MSG="Current PROBE position X={curprobex} Y={curprobey}"
        {% endif %}
    {% endif %}